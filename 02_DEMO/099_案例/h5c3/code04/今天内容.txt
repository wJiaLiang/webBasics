1:css3选择器
 选取li 的父元素下面的第一个子元素，第一个子元素必须是li
    li:nth-child(1){
    }
2:定位 （获取当前位置，返回一个字符串，会用即可，不用背api）
3:拖拽
   我们可以使用jQuery 的一个插件来完成拖拽,需要导入两个js 库
        jQuery.js
        jQuery.ui.js
4:盒模型：
      改变盒子的计算方式
      box-sizing:content-box
      盒子的计算方式：borderwidth+padding width+实际width
      box-sizing:border-box
      盒子的计算方式：盒子的实际宽度
1:渐变分为两种类型的渐变
        1:线性渐变
             一般情况下，我们也是对背景色进行渐变
             沿着某个方向做渐变
             有一个起始颜色
             有一个终止颜色
             background:linear-gradient(
             )
             可以设置多个起始颜色.
              background: linear-gradient(
                     90deg,
                     pink 0%,
                     red 25%,
                     green 25%,
                     chartreuse 50%,
                     pink 50%,
                     hotpink 75%,
                     yellow 75%,
                     yellow 100%
             );
        2:径向渐变
            一个中心点绕着四周进行渐变.
            1:围绕四周渐变的一个半径
            2:中心点所在的位置
            3:起始颜色
            4：终止颜色.
        3:背景
            我们之前假设有一个div
            我可以给这个div 设置背景色
            我为了让这个效果更加绚丽，我可能为这个背景添加一张图片
            在默认情况下，我给一个div ，添加一张背景图片，
            它的背景的大小就应该是实际图片的大小，如果这个图片
            超出了盒子，其它的背景区域我们看不到.
            我们可以控制背景图片的大小
            background-size:
             背景尺寸：
                    1：我们可以给盒子添加一个背景图片
                    2：背景图片的大小默认就是图片的实际大小，不够盒子的大小，背景可能是平铺
                    3: 可以控制背景图片的大小

                    background-size:
                        1:第一种方式：
                                我们可以设置背景图片的与盒子的大小
                                1：背景图片可能会变形
                                2：背景图片不能随着盒子的大小的改变而改变
                        2：第二种方式
                                我们可以对背景图片的大小设置百分比
                                1：背景图片可以随着盒子大小的改变而改变
                                2：可能图片会变形
                        3:第三种方式：
                                contain
                                1：背景图片始终在div 里面完整显示，等比例缩放
                                2：这个盒子有可能没有填满.但是图片一定不会变形.
                        4:第四种方式：
                                cover
                                1：这个背景图片始终填满整个窗口
                                2：它也会等比例缩放
                                3：背景图片超出部分不显示.
                         三星
            背景原点
                通过background-origin: 可以用来调整背景图片的所在的位置.
                我们可以修改背景的原点.
                                1:border-box 背景的原点是在当前这个div 的边框上面
                                2:padding-box 背景的原点在内间距区域.
                                3:content-box 背景的原点默认在内容区域
            背景裁剪
                我们可以通过background-clip 对背景进行裁剪，这个裁剪肯定是浏览器进行裁剪的
            多重背景：
                    我可以为层添加多个背景图片.
                    background:url...
                    url....
            过渡：
            过渡是CSS3中具有颠覆性的特征之一，我们早之前我们的网页里面做动画
        都需要依靠js ，而且还有一些动画使用js 也实现不了的，这时候很多的公司为了
        使自己的网站效果非常绚丽，他们一般都会使用另外一个技术：adobe flash
            假设css3 普及了，颠覆性的技术.
            用来做动画效果的:
                一般有两种类型的动画效果
                补间动画：
                      我们只需要管执行动画的时候的
                      1:起始状态
                      2:终止状态
                      transition-property
                      transition-duration
                      transition-delay
                      transition-timing-function:过度的速度.
                      关于补间动画，以及帧动画我们可以看http://mux.alimama.com/posts/1009
                帧动画：
                      这个不是我们学习的重点
                      中间的每一个状态:
                      通过一帧一帧的画面按照固定顺序和速度播放
              在css2 或者css3 当中
              我们使用transform 这个属性来实现2d 3d 效果
        其中2d 效果
              1：scale   缩放
                我让这个盒子进行缩放
                如果是大于1 ，说明是放大.
                如果小于1 ，说明是缩小.
                scale 里面可以接受两个参数
                    第一个参数：水平缩放
                    第二个参数：垂直方向缩放
              transform:scale(1,3);
              2：translate 移动
                    translate(100px,100px)
                    第一个参数
                        如果是正数
                        沿着x 轴水平向右移动.
                        如果是负数
                        沿着x 轴水平向左移动
                        这个里面的值还可以传递百分比
                        还可以是负的百分比
                    第二个参数
                        如果是正数
                        沿着y轴垂直向下移动.
                        如果是负数
                        沿着y轴垂直向上移动
              3: rotate  旋转
                    旋转我们使用rotate
                    			正数：是顺时针旋转
                    			负数：逆时针旋转.
                    旋转有一个中心点,默认中心点当前旋转元素的正中心位置
                    我们可以通过这个属性进行修改中心点位置.
                           transform-origin:left top,right top






